const InfluencerService = require("../../application/influencer-service.js");
const InfluencerDatasource = require("../../infrastructure/datasource/influencer-datasource.js");

// jest.mock()„Çí‰ΩøÁî®„Åó„Å¶InfluencerDatasource„É¢„Ç∏„É•„Éº„É´„Çí„É¢„ÉÉ„ÇØÂåñ„Åô„Çã
jest.mock("../../infrastructure/datasource/influencer-datasource.js", () => {
  const mock = jest.fn();
  return jest.fn().mockImplementation(() => {
    return {
      detail: mock,
      getTopInfluencersByMetric: mock,
      getTextData: mock,
    };
  });
});

describe("detail", () => {
  test("Ê≠£Â∏∏Á≥ª: „Éë„Çπ„Éë„É©„É°„Éº„Çø„ÅåÊï∞ÂÄ§", async () => {
    const influencerData = [
      {
        influencer_id: 2,
        likes: "551.7500",
        comments: "10.5000",
      },
    ];
    const responseData = {
      influencer_id: 2,
      likes: "551.7500",
      comments: "10.5000",
    };
    // InfluencerDatasource„É¢„Ç∏„É•„Éº„É´„ÅÆdetailÈñ¢Êï∞„Çí„É¢„ÉÉ„ÇØÂåñ„Åó„ÄÅÈÅ©Âàá„Å™ÂÄ§„ÇíËøî„Åô„Çà„ÅÜ„Å´Ë®≠ÂÆö
    InfluencerDatasource().detail.mockResolvedValueOnce(influencerData);

    const influencerService = new InfluencerService();
    const response = await influencerService.detail(1);
    expect(response).toEqual(responseData);
  });
  test("Ê≠£Â∏∏Á≥ª: „Ç§„É≥„Éï„É´„Ç®„É≥„Çµ„Éº„Åå„ÅÑ„Å™„Åã„Å£„Åü", async () => {
    const influencerData = [];
    // InfluencerDatasource„É¢„Ç∏„É•„Éº„É´„ÅÆdetailÈñ¢Êï∞„Çí„É¢„ÉÉ„ÇØÂåñ„Åó„ÄÅÈÅ©Âàá„Å™ÂÄ§„ÇíËøî„Åô„Çà„ÅÜ„Å´Ë®≠ÂÆö
    InfluencerDatasource().detail.mockResolvedValueOnce(influencerData);
    const influencerService = new InfluencerService();
    // „Ç®„É©„Éº„ÅåÁô∫Áîü„Åô„Çã„Åã„Å©„ÅÜ„Åã„ÇíÁ¢∫Ë™ç
    try {
      await influencerService.detail(1);
    } catch (error) {
      expect(error.name).toBe("NotInfluencerError");
      expect(error.message).toBe("Influencer ID [1] not found");
    }
  });
});

describe("getTopInfluencersByMetric", () => {
  test("Ê≠£Â∏∏Á≥ª: metric„Åålikes", async () => {
    const requestQuery = {
      metric: "likes",
      limit: 1,
    };
    const influencerData = [
      {
        influencer_id: 2,
        metric: "551.7500",
      },
    ];
    const responseData = [
      {
        No: 1,
        influencerId: 2,
        likes: "551.7500",
      },
    ];
    // InfluencerDatasource„É¢„Ç∏„É•„Éº„É´„ÅÆdetailÈñ¢Êï∞„Çí„É¢„ÉÉ„ÇØÂåñ„Åó„ÄÅÈÅ©Âàá„Å™ÂÄ§„ÇíËøî„Åô„Çà„ÅÜ„Å´Ë®≠ÂÆö
    InfluencerDatasource().getTopInfluencersByMetric.mockResolvedValueOnce(influencerData);

    const influencerService = new InfluencerService();
    const response = await influencerService.getTopInfluencersByMetric(requestQuery);
    expect(response).toEqual(responseData);
  });
  test("Ê≠£Â∏∏Á≥ª: metric„Ååcomments", async () => {
    const requestQuery = {
      metric: "comments",
      limit: 1,
    };
    const influencerData = [
      {
        influencer_id: 2,
        metric: "551.7500",
      },
    ];
    const responseData = [
      {
        No: 1,
        influencerId: 2,
        comments: "551.7500",
      },
    ];
    // InfluencerDatasource„É¢„Ç∏„É•„Éº„É´„ÅÆdetailÈñ¢Êï∞„Çí„É¢„ÉÉ„ÇØÂåñ„Åó„ÄÅÈÅ©Âàá„Å™ÂÄ§„ÇíËøî„Åô„Çà„ÅÜ„Å´Ë®≠ÂÆö
    InfluencerDatasource().getTopInfluencersByMetric.mockResolvedValueOnce(influencerData);

    const influencerService = new InfluencerService();
    const response = await influencerService.getTopInfluencersByMetric(requestQuery);
    expect(response).toEqual(responseData);
  });
});

describe("getTopNouns", () => {
  const dbMockData = [
    {
      influencer_id: 2,
      text:
        "Ôºé\n" +
        "üë∂üéâüéÇ\n" +
        "Ôºé\n" +
        "ÈÅÖ„Çå„Å∞„Åõ„Å™„Åå„Çâhalf birthday„ÅÆ„ÅäÁ•ù„ÅÑ‚ô°\n" +
        "Ôºà1„É∂Êúà„ÇÇÈÅÖ„Çå„Å¶„Çãü§´Ôºâ\n" +
        "@cakewith_tokyo „Åß„Ç™„Éº„ÉÄ„Éº„Åó„Åæ„Åó„Åüü§≥\n" +
        "„Ç±„Éº„Ç≠„ÅÆÂΩ¢„Åå‚ñ°„Éª‚óã„Éª‚ô°„ÅåÈÅ∏„Åπ„Å¶„ÄÅ„ÇØ„É™„Éº„É†„ÅÆËâ≤„ÇÑ„Éï„É´„Éº„ÉÑÊúâÁÑ°„ÄÅ„Çµ„Ç§„Éâ„ÅÆ„ÇØ„É™„Éº„É†„Å´„Çπ„ÉÜ„ÉÉ„ÉÅ„ÇíÂÖ•„Çå„Çã„Åã„Å™„Å©ÈÅ∏„Åπ„Å¶„ÄÅÂ•Ω„Åç„Å™ÊñáÂ≠ó„ÇÑÂÜôÁúü„Çí„Éó„É™„É≥„Éà„Åô„Çã„Åì„Å®„ÇÇÂèØËÉΩ„Åß„ÄÅ„Å©„Çì„Å™„Éá„Ç∂„Ç§„É≥„Å´„Åô„Çã„ÅãÂáÑ„ÅèËø∑„ÅÑ„Åæ„Åó„Åüü•∫‚ô°\n" +
        "Ôºé\n" +
        "ÂÜ∑Âáç„ÅßÂ±ä„Åè„ÅÆ„ÅßÈ£ü„Åπ„ÇãÂâç„Å´ÂÜ∑ËîµÂ∫´„Åß5ÊôÇÈñì„Åª„Å©Ëß£Âáç„Åô„Çã„Å®È£ü„Åπ„Çâ„Çå„Åæ„Åôüç∞\n" +
        "„ÅäË™ïÁîüÊó•‰ºö„ÅÆÂΩìÊó•„Å´„Ç±„Éº„Ç≠Â±ã„Åï„Çì„Å´Âèñ„Çä„Å´Ë°å„Å£„Åü„Çä„Éê„Çø„Éê„Çø„Åõ„Åö„Å´Áî®ÊÑè„Åß„Åç„Çã„ÅÆ„ÅØ„É°„ÉÉ„ÉÅ„É£Êúâ„ÇäÈõ£„ÅÑ„Åß„Åô„Çà„Å≠‚ÄºÔ∏é\n" +
        "„Çπ„Éù„É≥„Ç∏„Éª„Éï„É´„Éº„ÉÑ„Éª„ÇØ„É™„Éº„É†„ÅÆÂë≥„ÇÇÁæéÂë≥„Åó„ÅÑ„Åó„ÄÅË¶ã„ÅüÁõÆ„ÇÇ„Ç™„Ç∑„É£„É¨„ÅßÂèØÊÑõ„ÅÑ„ÅóüíØ„Åß„Åó„Åã„Å™„Åã„Å£„Åü„Åß„Åô‚úä\n" +
        "Ôºé\n" +
        "#cakewith_tokyo #halfbirthday #„Éè„Éº„Éï„Éê„Éº„Çπ„Éá„Éº #Ë™ïÁîüÊó•„Ç±„Éº„Ç≠ #ÁîüÂæå6„É∂Êúà #Áî∑„ÅÆÂ≠ê„Éô„Éì„Éº #„Éê„Éº„Çπ„Éá„Éº„Ç±„Éº„Ç≠ #„Ç™„Éº„ÉÄ„Éº„Ç±„Éº„Ç≠ #Áî∑„ÅÆÂ≠ê„Éû„Éû #ËÇ≤ÂÖê",
    },
    {
      influencer_id: 2,
      text:
        "Ôºé\n" +
        "„Éû„Ç∂„Éº„Ç∫„Éê„ÉÉ„Ç∞„ÅØ„É™„É•„ÉÉ„ÇØ„Çí‰Ωø„ÅÜ„Åì„Å®„ÅåÂ§ö„ÅÑ„Åë„Å©„ÄÅÂ∏ÉË£Ω„ÅÆ„ÇÇ„ÅÆ„Å†„Å£„Åü„ÅÆ„ÅßÈõ®„ÅÆÊó•„Å´‰∏≠Ë∫´„Åå„Åó„Å£„Å®„Çä„Åó„Å¶„Åó„Åæ„ÅÑ„ÄÅÈò≤Ê∞¥„Åå„Åó„Å£„Åã„Çä„Åó„Å¶„ÅÑ„Çã @gastonluga „ÅÆ„ÇÇ„ÅÆ„Å´„Åó„Åæ„Åó„Åüüéí\n" +
        "ÂΩ¢„ÇÇ„Åó„Å£„Åã„Çä„Åó„Å¶„Å¶Ëç∑Áâ©„ÇÇ„Åü„Åè„Åï„ÇìÂÖ•„Çã„Åó„ÄÅ„Éá„Ç∂„Ç§„É≥„ÇÇ„Ç™„Ç∑„É£„É¨„ÅßÊúÄÈ´ò„Åß„Åô‚òª\n" +
        "Ôºé\n" +
        "ÈÄÅÊñô„ÇÇ„Åã„Åã„Çâ„Å™„ÅÑ„Åó„ÄÅ„Äêmanamin158„Äë„ÅÆ„ÇØ„Éº„Éù„É≥„Åß15% off„Å´„Å™„Çä„Åæ„Åô‚ÄªÂÖ¨ÂºèHP„ÅÆ„Åø\n" +
        "ÊúüÈñìÊï∞ÈáèÈôêÂÆö„ÅÆ„Éó„É¨„Çº„É≥„Éà„ÇÇ„Å§„ÅÑ„Å¶„ÅÑ„Å¶„ÅäÂæó„Åß„Åô‚óé\n" +
        "Ôºé\n" +
        "#GastonLuga #„Ç¨„Çπ„Éà„É≥„É´„Éº„Ç¨¬†#„Éê„ÉÉ„ÇØ„Éë„ÉÉ„ÇØ #CARRYYOURLIFEEFFORTLESSLY",
    },
    {
      influencer_id: 3,
      text: "#„Éû„Éû„Ç≥„Éº„Éá #„Éû„Éû„Éï„Ç°„ÉÉ„Ç∑„Éß„É≥ #Â§ß‰∫∫„Ç≥„Éº„Éá",
    },
    {
      influencer_id: 4,
      text: "#IMUNNY #„Ç¢„Ç§„É†„É¶„Éã #„Ç≥„Çπ„É°„É¨„Éù #Êñ∞‰Ωú„Ç≥„Çπ„É°",
    },
  ];
  test("Ê≠£Â∏∏Á≥ª: metric„Åålikes", async () => {
    const responseData = [
      { influencer_id: "2", wordCount: [{ "#": 14 }] },
      { influencer_id: "3", wordCount: [{ "#": 3 }] },
      { influencer_id: "4", wordCount: [{ "#": 4 }] },
    ];
    // InfluencerDatasource„É¢„Ç∏„É•„Éº„É´„ÅÆdetailÈñ¢Êï∞„Çí„É¢„ÉÉ„ÇØÂåñ„Åó„ÄÅÈÅ©Âàá„Å™ÂÄ§„ÇíËøî„Åô„Çà„ÅÜ„Å´Ë®≠ÂÆö
    InfluencerDatasource().getTextData.mockResolvedValueOnce(dbMockData);

    const influencerService = new InfluencerService();
    const response = await influencerService.getTopNouns(1);
    expect(response).toEqual(responseData);
  });
  test("Ê≠£Â∏∏Á≥ª: metric„Ååcomments", async () => {
    const responseData = [
      { influencer_id: "2", wordCount: [] },
      { influencer_id: "3", wordCount: [] },
      { influencer_id: "4", wordCount: [] },
    ];
    // InfluencerDatasource„É¢„Ç∏„É•„Éº„É´„ÅÆdetailÈñ¢Êï∞„Çí„É¢„ÉÉ„ÇØÂåñ„Åó„ÄÅÈÅ©Âàá„Å™ÂÄ§„ÇíËøî„Åô„Çà„ÅÜ„Å´Ë®≠ÂÆö
    InfluencerDatasource().getTextData.mockResolvedValueOnce(dbMockData);

    const influencerService = new InfluencerService();
    const response = await influencerService.getTopNouns(0);
    expect(response).toEqual(responseData);
  });
  test("Ê≠£Â∏∏Á≥ª: metric„Ååcomments", async () => {
    const responseData = [
      {
        influencer_id: "2",
        wordCount: [
          {
            "#": 14,
          },
          {
            „Ç±„Éº„Ç≠: 5,
          },
          {
            "‚ô°": 3,
          },
          {
            „ÇØ„É™„Éº„É†: 3,
          },
          {
            Êó•: 3,
          },
          {
            „É∂Êúà: 2,
          },
          {
            "@": 2,
          },
          {
            cakewith: 2,
          },
          {
            _: 2,
          },
          {
            tokyo: 2,
          },
        ],
      },
      {
        influencer_id: "3",
        wordCount: [
          {
            "#": 3,
          },
          {
            „Éû„Éû„Ç≥„Éº„Éá: 1,
          },
          {
            „Éû„Éû: 1,
          },
          {
            „Éï„Ç°„ÉÉ„Ç∑„Éß„É≥: 1,
          },
          {
            Â§ß‰∫∫: 1,
          },
          {
            „Ç≥„Éº„Éá: 1,
          },
        ],
      },
      {
        influencer_id: "4",
        wordCount: [
          {
            "#": 4,
          },
          {
            IMUNNY: 1,
          },
          {
            „Ç¢„Ç§„É†„É¶„Éã: 1,
          },
          {
            „Ç≥„Çπ„É°„É¨„Éù: 1,
          },
          {
            Êñ∞‰Ωú: 1,
          },
          {
            „Ç≥„Çπ„É°: 1,
          },
        ],
      },
    ];
    // InfluencerDatasource„É¢„Ç∏„É•„Éº„É´„ÅÆdetailÈñ¢Êï∞„Çí„É¢„ÉÉ„ÇØÂåñ„Åó„ÄÅÈÅ©Âàá„Å™ÂÄ§„ÇíËøî„Åô„Çà„ÅÜ„Å´Ë®≠ÂÆö
    InfluencerDatasource().getTextData.mockResolvedValueOnce(dbMockData);

    const influencerService = new InfluencerService();
    const response = await influencerService.getTopNouns(10);
    expect(response).toEqual(responseData);
  });
});
